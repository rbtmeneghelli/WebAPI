// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.InfraStructure.Data.Context;

#nullable disable

namespace WebAPI.InfraStructure.Data.Migrations
{
    [DbContext(typeof(WebAPIContext))]
    [Migration("20240925025912_ajustes-pontuais-db")]
    partial class ajustespontuaisdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.AuthenticationSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<bool>("ApplyTwoFactoryValidation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ApplyTwoFactoryValidation");

                    b.Property<int>("BlockUserTime")
                        .HasColumnType("int")
                        .HasColumnName("BlockUserTime");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 10, DateTimeKind.Unspecified).AddTicks(8219))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<int>("NumberOfTryToBlockUser")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfTryToBlockUser");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType")
                        .IsUnique()
                        .HasFilter("[IdEnvironmentType] IS NOT NULL");

                    b.ToTable("Configuration_AuthenticationSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplyTwoFactoryValidation = false,
                            BlockUserTime = 60,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 1L,
                            NumberOfTryToBlockUser = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            ApplyTwoFactoryValidation = false,
                            BlockUserTime = 60,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 2L,
                            NumberOfTryToBlockUser = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            ApplyTwoFactoryValidation = false,
                            BlockUserTime = 60,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 3L,
                            NumberOfTryToBlockUser = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            ApplyTwoFactoryValidation = false,
                            BlockUserTime = 60,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 4L,
                            NumberOfTryToBlockUser = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            ApplyTwoFactoryValidation = false,
                            BlockUserTime = 60,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 5L,
                            NumberOfTryToBlockUser = 3,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailDisplay", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 10, DateTimeKind.Unspecified).AddTicks(3564))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long>("EmailTemplateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasAttachment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("HasAttachment");

                    b.Property<int>("MessagePriority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Subject");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("Configuration_EmailDisplaySettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Body = "Olá, {0}<br>Seja bem vindo ao <b>{1}</b><br> Utilize a senha <b>1234</b> para acessar o sistema e usufrua de todas as ferramentas disponíveis.<br>",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            EmailTemplateId = 1L,
                            HasAttachment = false,
                            MessagePriority = 1,
                            Status = true,
                            Subject = "Bem vindo ao sistema {0}",
                            Title = "Email de boas vindas"
                        },
                        new
                        {
                            Id = 2L,
                            Body = "<center>Olá, {0}</center><center>Conforme sua solicitação enviamos este email para que você possa concluir sua solicitação de troca de senha. Clique no botão abaixo.</center><br> ",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            EmailTemplateId = 1L,
                            HasAttachment = false,
                            MessagePriority = 1,
                            Status = true,
                            Subject = "{0} - Solicitação de troca de senha",
                            Title = "Email de troca de senha"
                        },
                        new
                        {
                            Id = 3L,
                            Body = "<center>Olá, {0}</center><center>Conforme sua solicitação enviamos este email para que você possa concluir sua solicitação de esqueci a senha. Clique no botão abaixo.</center><br> ",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            EmailTemplateId = 1L,
                            HasAttachment = false,
                            MessagePriority = 1,
                            Status = true,
                            Subject = "{0} - Esqueci a senha",
                            Title = "Email de reset de senha"
                        },
                        new
                        {
                            Id = 4L,
                            Body = "<center>Olá, {0}</center><center>Quero reporta-lo que a sua confirmação de senha foi realizada com sucesso no periodo das 24/09/2024 - 23:59</center><br> ",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            EmailTemplateId = 1L,
                            HasAttachment = false,
                            MessagePriority = 1,
                            Status = true,
                            Subject = "{0} - Confirmação de senha",
                            Title = "Email de confirmação de senha"
                        },
                        new
                        {
                            Id = 5L,
                            Body = "",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            EmailTemplateId = 1L,
                            HasAttachment = false,
                            MessagePriority = 1,
                            Status = true,
                            Subject = "{0} - Relatório",
                            Title = "Email de relatório"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 10, DateTimeKind.Unspecified).AddTicks(5827))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Email");

                    b.Property<bool>("EnableSsl")
                        .HasMaxLength(80)
                        .HasColumnType("bit")
                        .HasColumnName("EnableSsl");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Host");

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Password");

                    b.Property<int>("PrimaryPort")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("PrimaryPort");

                    b.Property<string>("SmtpConfig")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("SmtpConfig");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType");

                    b.ToTable("Configuration_EmailSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Email = "teste@gmail.com",
                            EnableSsl = true,
                            Host = "Gmail",
                            IdEnvironmentType = 5L,
                            Password = "6OoM0cUjWAU44NxS5aRWlQ==",
                            PrimaryPort = 25,
                            SmtpConfig = "smtp.gmail.com",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Email = "teste@gmail.com",
                            EnableSsl = true,
                            Host = "Outlook",
                            IdEnvironmentType = 5L,
                            Password = "Hr7KLRbaYNpZWzMHmyb69w==",
                            PrimaryPort = 25,
                            SmtpConfig = "smtp.office365.com",
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Email = "teste@gmail.com",
                            EnableSsl = true,
                            Host = "Hotmail",
                            IdEnvironmentType = 5L,
                            Password = "fUUts0fVgdK++dJH5TsFhA==",
                            PrimaryPort = 25,
                            SmtpConfig = "smtp.live.com",
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailTemplate", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 10, DateTimeKind.Unspecified).AddTicks(1600))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Configuration_EmailTemplateSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "WebAPI",
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 11, DateTimeKind.Unspecified).AddTicks(9351))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Description");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("Initials");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Configuration_EnvironmentTypeSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "Ambiente Produção",
                            Initials = "PRD",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "Ambiente PréProdução",
                            Initials = "PREPRD",
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "Ambiente Homologação",
                            Initials = "HML",
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "Ambiente QA",
                            Initials = "QA",
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            Description = "Ambiente DEV",
                            Initials = "DEV",
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.ExpirationPasswordSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 11, DateTimeKind.Unspecified).AddTicks(431))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<int>("NotifyExpirationDays")
                        .HasColumnType("int")
                        .HasColumnName("NotifyExpirationDays");

                    b.Property<int>("QtyDaysPasswordExpire")
                        .HasColumnType("int")
                        .HasColumnName("QtyDaysPasswordExpire");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType")
                        .IsUnique()
                        .HasFilter("[IdEnvironmentType] IS NOT NULL");

                    b.ToTable("Configuration_ExpirationPasswordSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 1L,
                            NotifyExpirationDays = 5,
                            QtyDaysPasswordExpire = 90,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 2L,
                            NotifyExpirationDays = 5,
                            QtyDaysPasswordExpire = 90,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 3L,
                            NotifyExpirationDays = 5,
                            QtyDaysPasswordExpire = 90,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 4L,
                            NotifyExpirationDays = 5,
                            QtyDaysPasswordExpire = 90,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 5L,
                            NotifyExpirationDays = 5,
                            QtyDaysPasswordExpire = 90,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.LayoutSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("BannerMobile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("BannerMobile");

                    b.Property<byte[]>("BannerWeb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("BannerWeb");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 11, DateTimeKind.Unspecified).AddTicks(2547))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("DocumentFileContentToUpload")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("DocumentFileContentToUpload");

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageFileContentToUpload")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("ImageFileContentToUpload");

                    b.Property<DateTime>("InicioValidade")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("InicioValidade");

                    b.Property<byte[]>("LogoMobile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("LogoMobile");

                    b.Property<byte[]>("LogoWeb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("LogoWeb");

                    b.Property<int>("MaxDocumentFileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(20)
                        .HasColumnName("MaxDocumentFileSize");

                    b.Property<int>("MaxImageFileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(20)
                        .HasColumnName("MaxImageFileSize");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("TerminoValidade")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("TerminoValidade");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType")
                        .IsUnique()
                        .HasFilter("[IdEnvironmentType] IS NOT NULL");

                    b.ToTable("Configuration_LayoutSettings", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("Configuration_LayoutSettingsHistory");
                                ttb
                                    .HasPeriodStart("InicioValidade")
                                    .HasColumnName("InicioValidade");
                                ttb
                                    .HasPeriodEnd("TerminoValidade")
                                    .HasColumnName("TerminoValidade");
                            }));
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.LogSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 11, DateTimeKind.Unspecified).AddTicks(5285))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<bool>("SaveLogCreateData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SaveLogCreateData");

                    b.Property<bool>("SaveLogDeleteData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SaveLogDeleteData");

                    b.Property<bool>("SaveLogResearchData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SaveLogResearchData");

                    b.Property<bool>("SaveLogTurnOffSystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("SaveLogTurnOffSystem");

                    b.Property<bool>("SaveLogTurnOnSystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("SaveLogTurnOnSystem");

                    b.Property<bool>("SaveLogUpdateData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SaveLogUpdateData");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType")
                        .IsUnique()
                        .HasFilter("[IdEnvironmentType] IS NOT NULL");

                    b.ToTable("Configuration_LogSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 1L,
                            SaveLogCreateData = true,
                            SaveLogDeleteData = true,
                            SaveLogResearchData = true,
                            SaveLogTurnOffSystem = false,
                            SaveLogTurnOnSystem = false,
                            SaveLogUpdateData = true,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 2L,
                            SaveLogCreateData = true,
                            SaveLogDeleteData = true,
                            SaveLogResearchData = true,
                            SaveLogTurnOffSystem = false,
                            SaveLogTurnOnSystem = false,
                            SaveLogUpdateData = true,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 3L,
                            SaveLogCreateData = true,
                            SaveLogDeleteData = true,
                            SaveLogResearchData = true,
                            SaveLogTurnOffSystem = false,
                            SaveLogTurnOnSystem = false,
                            SaveLogUpdateData = true,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 4L,
                            SaveLogCreateData = true,
                            SaveLogDeleteData = true,
                            SaveLogResearchData = true,
                            SaveLogTurnOffSystem = false,
                            SaveLogTurnOnSystem = false,
                            SaveLogUpdateData = true,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 5L,
                            SaveLogCreateData = true,
                            SaveLogDeleteData = true,
                            SaveLogResearchData = true,
                            SaveLogTurnOffSystem = false,
                            SaveLogTurnOnSystem = false,
                            SaveLogUpdateData = true,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.RequiredPasswordSettings", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 11, DateTimeKind.Unspecified).AddTicks(7754))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long?>("IdEnvironmentType")
                        .HasColumnType("bigint");

                    b.Property<int>("MinimalOfChars")
                        .HasColumnType("int")
                        .HasColumnName("MinimalOfChars");

                    b.Property<bool>("MustHaveNumbers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("MustHaveNumbers");

                    b.Property<bool>("MustHaveSpecialChars")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("MustHaveSpecialChars");

                    b.Property<bool>("MustHaveUpperCaseLetter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("MustHaveUpperCaseLetter");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdEnvironmentType")
                        .IsUnique()
                        .HasFilter("[IdEnvironmentType] IS NOT NULL");

                    b.ToTable("Configuration_RequiredPasswordSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 1L,
                            MinimalOfChars = 10,
                            MustHaveNumbers = true,
                            MustHaveSpecialChars = true,
                            MustHaveUpperCaseLetter = true,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 2L,
                            MinimalOfChars = 10,
                            MustHaveNumbers = true,
                            MustHaveSpecialChars = true,
                            MustHaveUpperCaseLetter = true,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 3L,
                            MinimalOfChars = 10,
                            MustHaveNumbers = true,
                            MustHaveSpecialChars = true,
                            MustHaveUpperCaseLetter = true,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 4L,
                            MinimalOfChars = 10,
                            MustHaveNumbers = true,
                            MustHaveSpecialChars = true,
                            MustHaveUpperCaseLetter = true,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 22, DateTimeKind.Unspecified).AddTicks(2668),
                            IdEnvironmentType = 5L,
                            MinimalOfChars = 10,
                            MustHaveNumbers = true,
                            MustHaveSpecialChars = true,
                            MustHaveUpperCaseLetter = true,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Area", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 8, DateTimeKind.Unspecified).AddTicks(7218))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<string>("HierarchyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HierarchyLevel");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Area", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Administrador Dev",
                            HierarchyLevel = "Development",
                            Order = 0,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Administrador Sistema",
                            HierarchyLevel = "Principal",
                            Order = 0,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Setor Operacional",
                            HierarchyLevel = "Areas",
                            Order = 0,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Setor Financeiro",
                            HierarchyLevel = "Areas",
                            Order = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Setor Marketing",
                            HierarchyLevel = "Areas",
                            Order = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Setor Relações Humanas",
                            HierarchyLevel = "Areas",
                            Order = 3,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Client", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 9, DateTimeKind.Unspecified).AddTicks(9300))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Client", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Employee", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("CelPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CelPhone");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 8, DateTimeKind.Unspecified).AddTicks(9397))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Email");

                    b.Property<long>("IdProfile")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Name");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<string>("TelPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TelPhone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdProfile");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("ControlPanel_Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CelPhone = "12999991234",
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Email = "xpto@gmail.com",
                            IdProfile = 1L,
                            IdUser = 1L,
                            Name = "Administrador Desenvolvedor",
                            Status = true,
                            TelPhone = "1233336789"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Operation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 9, DateTimeKind.Unspecified).AddTicks(2122))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Operation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Auditoria",
                            Order = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Logs",
                            Order = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Area",
                            Order = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Operação",
                            Order = 4,
                            Status = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Perfil",
                            Order = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Funcionario",
                            Order = 6,
                            Status = true
                        },
                        new
                        {
                            Id = 7L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Usuario",
                            Order = 7,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Profile", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 9, DateTimeKind.Unspecified).AddTicks(5449))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<long>("IdArea")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdArea");

                    b.ToTable("ControlPanel_Profile", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Perfil Desenvolvedor",
                            IdArea = 1L,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Perfil Administrador",
                            IdArea = 2L,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Perfil Manager Operacional",
                            IdArea = 3L,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            Description = "Perfil Manager Financeiro",
                            IdArea = 4L,
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.ProfileOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("IdProfile")
                        .HasColumnType("bigint")
                        .HasColumnName("IdProfile")
                        .HasColumnOrder(1);

                    b.Property<long>("IdOperation")
                        .HasColumnType("bigint")
                        .HasColumnName("IdOperation")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsEnable")
                        .HasColumnOrder(4);

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order")
                        .HasColumnOrder(5);

                    b.Property<string>("RoleTag")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RoleTag")
                        .HasColumnOrder(3);

                    b.HasKey("Id", "IdProfile", "IdOperation");

                    b.HasIndex("IdOperation");

                    b.HasIndex("IdProfile");

                    b.HasIndex("Id", "IdProfile", "IdOperation")
                        .IsUnique();

                    b.ToTable("ControlPanel_ProfileOperations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IdProfile = 1L,
                            IdOperation = 1L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_AUDIT_NEW"
                        },
                        new
                        {
                            Id = 2L,
                            IdProfile = 1L,
                            IdOperation = 1L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_AUDIT_EDIT"
                        },
                        new
                        {
                            Id = 3L,
                            IdProfile = 1L,
                            IdOperation = 1L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_AUDIT_DELETE"
                        },
                        new
                        {
                            Id = 4L,
                            IdProfile = 1L,
                            IdOperation = 1L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_AUDIT_VIEW"
                        },
                        new
                        {
                            Id = 5L,
                            IdProfile = 1L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_LOG_NEW"
                        },
                        new
                        {
                            Id = 6L,
                            IdProfile = 1L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_LOG_EDIT"
                        },
                        new
                        {
                            Id = 7L,
                            IdProfile = 1L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_LOG_DELETE"
                        },
                        new
                        {
                            Id = 8L,
                            IdProfile = 1L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_LOG_VIEW"
                        },
                        new
                        {
                            Id = 9L,
                            IdProfile = 1L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_AREA_NEW"
                        },
                        new
                        {
                            Id = 10L,
                            IdProfile = 1L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_AREA_EDIT"
                        },
                        new
                        {
                            Id = 11L,
                            IdProfile = 1L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_AREA_DELETE"
                        },
                        new
                        {
                            Id = 12L,
                            IdProfile = 1L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_AREA_VIEW"
                        },
                        new
                        {
                            Id = 13L,
                            IdProfile = 1L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_OPERATION_NEW"
                        },
                        new
                        {
                            Id = 14L,
                            IdProfile = 1L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_OPERATION_EDIT"
                        },
                        new
                        {
                            Id = 15L,
                            IdProfile = 1L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_OPERATION_DELETE"
                        },
                        new
                        {
                            Id = 16L,
                            IdProfile = 1L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_OPERATION_VIEW"
                        },
                        new
                        {
                            Id = 17L,
                            IdProfile = 1L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_PROFILE_NEW"
                        },
                        new
                        {
                            Id = 18L,
                            IdProfile = 1L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_PROFILE_EDIT"
                        },
                        new
                        {
                            Id = 19L,
                            IdProfile = 1L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_PROFILE_DELETE"
                        },
                        new
                        {
                            Id = 20L,
                            IdProfile = 1L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_PROFILE_VIEW"
                        },
                        new
                        {
                            Id = 21L,
                            IdProfile = 1L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_EMPLOYEE_NEW"
                        },
                        new
                        {
                            Id = 22L,
                            IdProfile = 1L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_EMPLOYEE_EDIT"
                        },
                        new
                        {
                            Id = 23L,
                            IdProfile = 1L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_EMPLOYEE_DELETE"
                        },
                        new
                        {
                            Id = 24L,
                            IdProfile = 1L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_EMPLOYEE_VIEW"
                        },
                        new
                        {
                            Id = 25L,
                            IdProfile = 1L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_USER_NEW"
                        },
                        new
                        {
                            Id = 26L,
                            IdProfile = 1L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_USER_EDIT"
                        },
                        new
                        {
                            Id = 27L,
                            IdProfile = 1L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_USER_DELETE"
                        },
                        new
                        {
                            Id = 28L,
                            IdProfile = 1L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_USER_VIEW"
                        },
                        new
                        {
                            Id = 29L,
                            IdProfile = 2L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_LOG_NEW"
                        },
                        new
                        {
                            Id = 30L,
                            IdProfile = 2L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_LOG_EDIT"
                        },
                        new
                        {
                            Id = 31L,
                            IdProfile = 2L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_LOG_DELETE"
                        },
                        new
                        {
                            Id = 32L,
                            IdProfile = 2L,
                            IdOperation = 2L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_LOG_VIEW"
                        },
                        new
                        {
                            Id = 33L,
                            IdProfile = 2L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_AREA_NEW"
                        },
                        new
                        {
                            Id = 34L,
                            IdProfile = 2L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_AREA_EDIT"
                        },
                        new
                        {
                            Id = 35L,
                            IdProfile = 2L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_AREA_DELETE"
                        },
                        new
                        {
                            Id = 36L,
                            IdProfile = 2L,
                            IdOperation = 3L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_AREA_VIEW"
                        },
                        new
                        {
                            Id = 37L,
                            IdProfile = 2L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_OPERATION_NEW"
                        },
                        new
                        {
                            Id = 38L,
                            IdProfile = 2L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_OPERATION_EDIT"
                        },
                        new
                        {
                            Id = 39L,
                            IdProfile = 2L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_OPERATION_DELETE"
                        },
                        new
                        {
                            Id = 40L,
                            IdProfile = 2L,
                            IdOperation = 4L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_OPERATION_VIEW"
                        },
                        new
                        {
                            Id = 41L,
                            IdProfile = 2L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_PROFILE_NEW"
                        },
                        new
                        {
                            Id = 42L,
                            IdProfile = 2L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_PROFILE_EDIT"
                        },
                        new
                        {
                            Id = 43L,
                            IdProfile = 2L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_PROFILE_DELETE"
                        },
                        new
                        {
                            Id = 44L,
                            IdProfile = 2L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_PROFILE_VIEW"
                        },
                        new
                        {
                            Id = 45L,
                            IdProfile = 2L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_EMPLOYEE_NEW"
                        },
                        new
                        {
                            Id = 46L,
                            IdProfile = 2L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_EMPLOYEE_EDIT"
                        },
                        new
                        {
                            Id = 47L,
                            IdProfile = 2L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_EMPLOYEE_DELETE"
                        },
                        new
                        {
                            Id = 48L,
                            IdProfile = 2L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_EMPLOYEE_VIEW"
                        },
                        new
                        {
                            Id = 49L,
                            IdProfile = 2L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_USER_NEW"
                        },
                        new
                        {
                            Id = 50L,
                            IdProfile = 2L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_USER_EDIT"
                        },
                        new
                        {
                            Id = 51L,
                            IdProfile = 2L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_USER_DELETE"
                        },
                        new
                        {
                            Id = 52L,
                            IdProfile = 2L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_USER_VIEW"
                        },
                        new
                        {
                            Id = 53L,
                            IdProfile = 3L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_PROFILE_NEW"
                        },
                        new
                        {
                            Id = 54L,
                            IdProfile = 3L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_PROFILE_EDIT"
                        },
                        new
                        {
                            Id = 55L,
                            IdProfile = 3L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_PROFILE_DELETE"
                        },
                        new
                        {
                            Id = 56L,
                            IdProfile = 3L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_PROFILE_VIEW"
                        },
                        new
                        {
                            Id = 57L,
                            IdProfile = 3L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_EMPLOYEE_NEW"
                        },
                        new
                        {
                            Id = 58L,
                            IdProfile = 3L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_EMPLOYEE_EDIT"
                        },
                        new
                        {
                            Id = 59L,
                            IdProfile = 3L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_EMPLOYEE_DELETE"
                        },
                        new
                        {
                            Id = 60L,
                            IdProfile = 3L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_EMPLOYEE_VIEW"
                        },
                        new
                        {
                            Id = 61L,
                            IdProfile = 3L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_USER_NEW"
                        },
                        new
                        {
                            Id = 62L,
                            IdProfile = 3L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_USER_EDIT"
                        },
                        new
                        {
                            Id = 63L,
                            IdProfile = 3L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_USER_DELETE"
                        },
                        new
                        {
                            Id = 64L,
                            IdProfile = 3L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_USER_VIEW"
                        },
                        new
                        {
                            Id = 65L,
                            IdProfile = 4L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_PROFILE_NEW"
                        },
                        new
                        {
                            Id = 66L,
                            IdProfile = 4L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_PROFILE_EDIT"
                        },
                        new
                        {
                            Id = 67L,
                            IdProfile = 4L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_PROFILE_DELETE"
                        },
                        new
                        {
                            Id = 68L,
                            IdProfile = 4L,
                            IdOperation = 5L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_PROFILE_VIEW"
                        },
                        new
                        {
                            Id = 69L,
                            IdProfile = 4L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_EMPLOYEE_NEW"
                        },
                        new
                        {
                            Id = 70L,
                            IdProfile = 4L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_EMPLOYEE_EDIT"
                        },
                        new
                        {
                            Id = 71L,
                            IdProfile = 4L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_EMPLOYEE_DELETE"
                        },
                        new
                        {
                            Id = 72L,
                            IdProfile = 4L,
                            IdOperation = 6L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_EMPLOYEE_VIEW"
                        },
                        new
                        {
                            Id = 73L,
                            IdProfile = 4L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 0,
                            RoleTag = "ROLE_USER_NEW"
                        },
                        new
                        {
                            Id = 74L,
                            IdProfile = 4L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 1,
                            RoleTag = "ROLE_USER_EDIT"
                        },
                        new
                        {
                            Id = 75L,
                            IdProfile = 4L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 2,
                            RoleTag = "ROLE_USER_DELETE"
                        },
                        new
                        {
                            Id = 76L,
                            IdProfile = 4L,
                            IdOperation = 7L,
                            IsEnable = true,
                            Order = 3,
                            RoleTag = "ROLE_USER_VIEW"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 9, DateTimeKind.Unspecified).AddTicks(3385))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<bool>("HasTwoFactoryValidation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InicioValidade")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("InicioValidade");

                    b.Property<bool>("IsAuthenticated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsAuthenticated");

                    b.Property<string>("LastPassword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LastPassword");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Password");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("TerminoValidade")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("TerminoValidade");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_User", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ControlPanel_UserHistory");
                                ttb
                                    .HasPeriodStart("InicioValidade")
                                    .HasColumnName("InicioValidade");
                                ttb
                                    .HasPeriodEnd("TerminoValidade")
                                    .HasColumnName("TerminoValidade");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(5006),
                            HasTwoFactoryValidation = false,
                            IsAuthenticated = true,
                            LastPassword = "",
                            Login = "admin@DefaultAPI.com.br",
                            Password = "AQAQJwAAGUUKC7PwwYOCmVFu0Wq/Lj8Tci4Zt15h3B2XtPtdsms=",
                            Status = true
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.Audit", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("ActionName");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 12, DateTimeKind.Unspecified).AddTicks(9708))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("KeyValues")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KeyValues");

                    b.Property<string>("NewValues")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NewValues");

                    b.Property<string>("OldValues")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OldValues");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TableName");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Audit", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.City", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(2915))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<long?>("IBGE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("bigint")
                        .HasColumnName("Ibge");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("City");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("ControlPanel_City", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Class");

                    b.Property<string>("MessageError")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Error");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Method");

                    b.Property<string>("Object")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Object");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Logs", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.Notification", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 13, DateTimeKind.Unspecified).AddTicks(2024))
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Description");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Notification", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.Region", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 12, DateTimeKind.Unspecified).AddTicks(8285))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Initials");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("ControlPanel_Region", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.States", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 12, DateTimeKind.Unspecified).AddTicks(3791))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Initials");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("ControlPanel_State", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.ValueObject.AddressData", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Cep");

                    b.Property<string>("Complement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Complement");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 24, 23, 59, 11, 12, DateTimeKind.Unspecified).AddTicks(5800))
                        .HasColumnName("CreateDate")
                        .HasColumnOrder(1);

                    b.Property<string>("Ddd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ddd");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("District");

                    b.Property<string>("Gia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Gia");

                    b.Property<string>("Ibge")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ibge");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siafi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Siafi");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status")
                        .HasColumnOrder(3);

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Address");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Uf");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateDate")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("ControlPanel_Cep", (string)null);
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.AuthenticationSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithOne("AuthenticationSettings")
                        .HasForeignKey("WebAPI.Domain.Entities.Configuration.AuthenticationSettings", "IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailDisplay", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EmailTemplate", "EmailTemplates")
                        .WithMany("EmailDisplays")
                        .HasForeignKey("EmailTemplateId")
                        .IsRequired();

                    b.Navigation("EmailTemplates");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithMany("EmailSettings")
                        .HasForeignKey("IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.ExpirationPasswordSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithOne("ExpirationPasswordSettings")
                        .HasForeignKey("WebAPI.Domain.Entities.Configuration.ExpirationPasswordSettings", "IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.LayoutSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithOne("LayoutSettings")
                        .HasForeignKey("WebAPI.Domain.Entities.Configuration.LayoutSettings", "IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.LogSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithOne("LogSettings")
                        .HasForeignKey("WebAPI.Domain.Entities.Configuration.LogSettings", "IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.RequiredPasswordSettings", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", "EnvironmentTypeSettings")
                        .WithOne("RequiredPasswordSettings")
                        .HasForeignKey("WebAPI.Domain.Entities.Configuration.RequiredPasswordSettings", "IdEnvironmentType");

                    b.Navigation("EnvironmentTypeSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Client", b =>
                {
                    b.OwnsOne("WebAPI.Domain.Entities.ControlPanel.Address", "ClientAddress", b1 =>
                        {
                            b1.Property<long>("ClientId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Cep")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cep");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City");

                            b1.HasKey("ClientId");

                            b1.ToTable("ControlPanel_ClientAddress", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.OwnsOne("WebAPI.Domain.Entities.ControlPanel.Document", "ClientDocument", b1 =>
                        {
                            b1.Property<long>("ClientId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Age")
                                .HasColumnType("int")
                                .HasColumnName("Age");

                            b1.Property<DateTime>("BirthDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("BirthDate");

                            b1.Property<string>("Cpf")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Cpf");

                            b1.Property<string>("Rg")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Rg");

                            b1.HasKey("ClientId");

                            b1.ToTable("ControlPanel_ClientDocument", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("ClientAddress");

                    b.Navigation("ClientDocument");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Employee", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.ControlPanel.Profile", "Profile")
                        .WithMany("Employees")
                        .HasForeignKey("IdProfile")
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Entities.ControlPanel.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("WebAPI.Domain.Entities.ControlPanel.Employee", "IdUser")
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Profile", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.ControlPanel.Area", "Area")
                        .WithMany("Profiles")
                        .HasForeignKey("IdArea")
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.ProfileOperation", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.ControlPanel.Operation", "Operation")
                        .WithMany("ProfileOperations")
                        .HasForeignKey("IdOperation")
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.Entities.ControlPanel.Profile", "Profile")
                        .WithMany("ProfileOperations")
                        .HasForeignKey("IdProfile")
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.City", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Others.States", "States")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.States", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Others.Region", "Region")
                        .WithMany("States")
                        .HasForeignKey("RegionId")
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebAPI.Domain.ValueObject.AddressData", b =>
                {
                    b.HasOne("WebAPI.Domain.Entities.Others.States", "State")
                        .WithMany("Ceps")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EmailTemplate", b =>
                {
                    b.Navigation("EmailDisplays");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Configuration.EnvironmentTypeSettings", b =>
                {
                    b.Navigation("AuthenticationSettings");

                    b.Navigation("EmailSettings");

                    b.Navigation("ExpirationPasswordSettings");

                    b.Navigation("LayoutSettings");

                    b.Navigation("LogSettings");

                    b.Navigation("RequiredPasswordSettings");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Area", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Operation", b =>
                {
                    b.Navigation("ProfileOperations");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.Profile", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("ProfileOperations");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.ControlPanel.User", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.Region", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("WebAPI.Domain.Entities.Others.States", b =>
                {
                    b.Navigation("Ceps");

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
